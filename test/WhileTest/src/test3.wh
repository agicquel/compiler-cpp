function isNotZero :
read X
%
  nop
%
write X

function isOne :
read X 
% 
  if X =? (cons nil nil) 
  then 
    B := (cons nil nil) 
  else 
    B := nil 
  fi
%
write B

function isZero :
read X
%
  if X 
  then
    B := nil
  else
    B := (cons nil nil)
  fi
%
write B

function greater : 
read X,Y
%
  if X =? Y 
  then
    R := nil
  else
    while not X =? nil and not Y =? nil
	do
      X := (tl X);
      Y := (tl Y)
	od;
	
	if X =? nil
	then
      R := nil
	else
	  R := (cons nil nil)
	fi
  fi
% 
write R


function test :
read X ,Y
% 
  if X =? Y 
  then 
    B := (cons nil nil) 
  else 
    B := nil 
  fi
%
write B

