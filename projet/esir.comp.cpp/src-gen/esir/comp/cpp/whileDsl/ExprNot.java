/**
 * generated by Xtext 2.19.0
 */
package esir.comp.cpp.whileDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expr Not</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link esir.comp.cpp.whileDsl.ExprNot#isNegation <em>Negation</em>}</li>
 *   <li>{@link esir.comp.cpp.whileDsl.ExprNot#getExpressionEq <em>Expression Eq</em>}</li>
 * </ul>
 *
 * @see esir.comp.cpp.whileDsl.WhileDslPackage#getExprNot()
 * @model
 * @generated
 */
public interface ExprNot extends EObject
{
  /**
   * Returns the value of the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Negation</em>' attribute.
   * @see #setNegation(boolean)
   * @see esir.comp.cpp.whileDsl.WhileDslPackage#getExprNot_Negation()
   * @model
   * @generated
   */
  boolean isNegation();

  /**
   * Sets the value of the '{@link esir.comp.cpp.whileDsl.ExprNot#isNegation <em>Negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Negation</em>' attribute.
   * @see #isNegation()
   * @generated
   */
  void setNegation(boolean value);

  /**
   * Returns the value of the '<em><b>Expression Eq</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression Eq</em>' containment reference.
   * @see #setExpressionEq(ExprEq)
   * @see esir.comp.cpp.whileDsl.WhileDslPackage#getExprNot_ExpressionEq()
   * @model containment="true"
   * @generated
   */
  ExprEq getExpressionEq();

  /**
   * Sets the value of the '{@link esir.comp.cpp.whileDsl.ExprNot#getExpressionEq <em>Expression Eq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression Eq</em>' containment reference.
   * @see #getExpressionEq()
   * @generated
   */
  void setExpressionEq(ExprEq value);

} // ExprNot
