/*
 * generated by Xtext 2.19.0
 */
grammar InternalWhileDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package esir.comp.cpp.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package esir.comp.cpp.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import esir.comp.cpp.services.WhileDslGrammarAccess;

}
@parser::members {
	private WhileDslGrammarAccess grammarAccess;

	public void setGrammarAccess(WhileDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getProgramAssignment()); }
		(rule__Model__ProgramAssignment)*
		{ after(grammarAccess.getModelAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileCommand
entryRuleWhileCommand
:
{ before(grammarAccess.getWhileCommandRule()); }
	 ruleWhileCommand
{ after(grammarAccess.getWhileCommandRule()); } 
	 EOF 
;

// Rule WhileCommand
ruleWhileCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileCommandAccess().getGroup()); }
		(rule__WhileCommand__Group__0)
		{ after(grammarAccess.getWhileCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForCommand
entryRuleForCommand
:
{ before(grammarAccess.getForCommandRule()); }
	 ruleForCommand
{ after(grammarAccess.getForCommandRule()); } 
	 EOF 
;

// Rule ForCommand
ruleForCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForCommandAccess().getGroup()); }
		(rule__ForCommand__Group__0)
		{ after(grammarAccess.getForCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCommand
entryRuleIfCommand
:
{ before(grammarAccess.getIfCommandRule()); }
	 ruleIfCommand
{ after(grammarAccess.getIfCommandRule()); } 
	 EOF 
;

// Rule IfCommand
ruleIfCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfCommandAccess().getGroup()); }
		(rule__IfCommand__Group__0)
		{ after(grammarAccess.getIfCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeachCommand
entryRuleForeachCommand
:
{ before(grammarAccess.getForeachCommandRule()); }
	 ruleForeachCommand
{ after(grammarAccess.getForeachCommandRule()); } 
	 EOF 
;

// Rule ForeachCommand
ruleForeachCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeachCommandAccess().getGroup()); }
		(rule__ForeachCommand__Group__0)
		{ after(grammarAccess.getForeachCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarsCommand
entryRuleVarsCommand
:
{ before(grammarAccess.getVarsCommandRule()); }
	 ruleVarsCommand
{ after(grammarAccess.getVarsCommandRule()); } 
	 EOF 
;

// Rule VarsCommand
ruleVarsCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsCommandAccess().getGroup()); }
		(rule__VarsCommand__Group__0)
		{ after(grammarAccess.getVarsCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNopCommand
entryRuleNopCommand
:
{ before(grammarAccess.getNopCommandRule()); }
	 ruleNopCommand
{ after(grammarAccess.getNopCommandRule()); } 
	 EOF 
;

// Rule NopCommand
ruleNopCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNopCommandAccess().getNopKeyword()); }
		'nop'
		{ after(grammarAccess.getNopCommandAccess().getNopKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVars
entryRuleVars
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsAccess().getGroup()); }
		(rule__Vars__Group__0)
		{ after(grammarAccess.getVarsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimple
entryRuleExprSimple
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
		(rule__ExprSimple__Alternatives)
		{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimpleWithLExpr
entryRuleExprSimpleWithLExpr
:
{ before(grammarAccess.getExprSimpleWithLExprRule()); }
	 ruleExprSimpleWithLExpr
{ after(grammarAccess.getExprSimpleWithLExprRule()); } 
	 EOF 
;

// Rule ExprSimpleWithLExpr
ruleExprSimpleWithLExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleWithLExprAccess().getGroup()); }
		(rule__ExprSimpleWithLExpr__Group__0)
		{ after(grammarAccess.getExprSimpleWithLExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimpleWithExpr
entryRuleExprSimpleWithExpr
:
{ before(grammarAccess.getExprSimpleWithExprRule()); }
	 ruleExprSimpleWithExpr
{ after(grammarAccess.getExprSimpleWithExprRule()); } 
	 EOF 
;

// Rule ExprSimpleWithExpr
ruleExprSimpleWithExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleWithExprAccess().getGroup()); }
		(rule__ExprSimpleWithExpr__Group__0)
		{ after(grammarAccess.getExprSimpleWithExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimpleWithSymbolLExpr
entryRuleExprSimpleWithSymbolLExpr
:
{ before(grammarAccess.getExprSimpleWithSymbolLExprRule()); }
	 ruleExprSimpleWithSymbolLExpr
{ after(grammarAccess.getExprSimpleWithSymbolLExprRule()); } 
	 EOF 
;

// Rule ExprSimpleWithSymbolLExpr
ruleExprSimpleWithSymbolLExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getGroup()); }
		(rule__ExprSimpleWithSymbolLExpr__Group__0)
		{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLExpr
entryRuleLExpr
:
{ before(grammarAccess.getLExprRule()); }
	 ruleLExpr
{ after(grammarAccess.getLExprRule()); } 
	 EOF 
;

// Rule LExpr
ruleLExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLExprAccess().getGroup()); }
		(rule__LExpr__Group__0)
		{ after(grammarAccess.getLExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprs
entryRuleExprs
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprsAccess().getGroup()); }
		(rule__Exprs__Group__0)
		{ after(grammarAccess.getExprsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getAlternatives()); }
		(rule__Expr__Alternatives)
		{ after(grammarAccess.getExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprAnd
entryRuleExprAnd
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAndAccess().getGroup()); }
		(rule__ExprAnd__Group__0)
		{ after(grammarAccess.getExprAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprOr
entryRuleExprOr
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprOrAccess().getGroup()); }
		(rule__ExprOr__Group__0)
		{ after(grammarAccess.getExprOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprNot
entryRuleExprNot
:
{ before(grammarAccess.getExprNotRule()); }
	 ruleExprNot
{ after(grammarAccess.getExprNotRule()); } 
	 EOF 
;

// Rule ExprNot
ruleExprNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprNotAccess().getGroup()); }
		(rule__ExprNot__Group__0)
		{ after(grammarAccess.getExprNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprEq
entryRuleExprEq
:
{ before(grammarAccess.getExprEqRule()); }
	 ruleExprEq
{ after(grammarAccess.getExprEqRule()); } 
	 EOF 
;

// Rule ExprEq
ruleExprEq 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprEqAccess().getAlternatives()); }
		(rule__ExprEq__Alternatives)
		{ after(grammarAccess.getExprEqAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLC
entryRuleLC
:
{ before(grammarAccess.getLCRule()); }
	 ruleLC
{ after(grammarAccess.getLCRule()); } 
	 EOF 
;

// Rule LC
ruleLC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLCAccess().getAlternatives()); }
		(rule__LC__Alternatives)*
		{ after(grammarAccess.getLCAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidID
entryRuleValidID
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidIDAccess().getAlternatives()); }
		(rule__ValidID__Alternatives)
		{ after(grammarAccess.getValidIDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getGroup_0()); }
		(rule__Command__Group_0__0)
		{ after(grammarAccess.getCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_1()); }
		ruleWhileCommand
		{ after(grammarAccess.getCommandAccess().getWhileCommandParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2()); }
		ruleForCommand
		{ after(grammarAccess.getCommandAccess().getForCommandParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_3()); }
		ruleIfCommand
		{ after(grammarAccess.getCommandAccess().getIfCommandParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4()); }
		ruleForeachCommand
		{ after(grammarAccess.getCommandAccess().getForeachCommandParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getVarsCommandParserRuleCall_5()); }
		ruleVarsCommand
		{ after(grammarAccess.getCommandAccess().getVarsCommandParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermAssignment_0()); }
		(rule__ExprSimple__TermAssignment_0)
		{ after(grammarAccess.getExprSimpleAccess().getTermAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermAssignment_1()); }
		(rule__ExprSimple__TermAssignment_1)
		{ after(grammarAccess.getExprSimpleAccess().getTermAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermAssignment_2()); }
		(rule__ExprSimple__TermAssignment_2)
		{ after(grammarAccess.getExprSimpleAccess().getTermAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionAssignment_3()); }
		(rule__ExprSimple__ExpressionAssignment_3)
		{ after(grammarAccess.getExprSimpleAccess().getExpressionAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionAssignment_4()); }
		(rule__ExprSimple__ExpressionAssignment_4)
		{ after(grammarAccess.getExprSimpleAccess().getExpressionAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionAssignment_5()); }
		(rule__ExprSimple__ExpressionAssignment_5)
		{ after(grammarAccess.getExprSimpleAccess().getExpressionAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__OperationAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithLExprAccess().getOperationConsKeyword_2_0_0()); }
		'cons'
		{ after(grammarAccess.getExprSimpleWithLExprAccess().getOperationConsKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleWithLExprAccess().getOperationListKeyword_2_0_1()); }
		'list'
		{ after(grammarAccess.getExprSimpleWithLExprAccess().getOperationListKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__OperationAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithExprAccess().getOperationHdKeyword_2_0_0()); }
		'hd'
		{ after(grammarAccess.getExprSimpleWithExprAccess().getOperationHdKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleWithExprAccess().getOperationTlKeyword_2_0_1()); }
		'tl'
		{ after(grammarAccess.getExprSimpleWithExprAccess().getOperationTlKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getGroup_0()); }
		(rule__Expr__Group_0__0)
		{ after(grammarAccess.getExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExpressionAssignment_1()); }
		(rule__Expr__ExpressionAssignment_1)
		{ after(grammarAccess.getExprAccess().getExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getGroup_0()); }
		(rule__ExprEq__Group_0__0)
		{ after(grammarAccess.getExprEqAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprEqAccess().getGroup_1()); }
		(rule__ExprEq__Group_1__0)
		{ after(grammarAccess.getExprEqAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LC__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLCAccess().getSPTerminalRuleCall_0()); }
		RULE_SP
		{ after(grammarAccess.getLCAccess().getSPTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLCAccess().getCRTerminalRuleCall_1()); }
		RULE_CR
		{ after(grammarAccess.getLCAccess().getCRTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLCAccess().getTABTerminalRuleCall_2()); }
		RULE_TAB
		{ after(grammarAccess.getLCAccess().getTABTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLCAccess().getLFTerminalRuleCall_3()); }
		RULE_LF
		{ after(grammarAccess.getLCAccess().getLFTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidIDAccess().getSYMBOLTerminalRuleCall_1()); }
		RULE_SYMBOL
		{ after(grammarAccess.getValidIDAccess().getSYMBOLTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getFunctionAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionNameAssignment_2()); }
	(rule__Function__FunctionNameAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getFunctionNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getFunctionAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getFunctionAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionDefinitionAssignment_6()); }
	(rule__Function__FunctionDefinitionAssignment_6)
	{ after(grammarAccess.getFunctionAccess().getFunctionDefinitionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getFunctionAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getIntputAssignment_2()); }
	(rule__Definition__IntputAssignment_2)
	{ after(grammarAccess.getDefinitionAccess().getIntputAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
	rule__Definition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__6__Impl
	rule__Definition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getBodyAssignment_6()); }
	(rule__Definition__BodyAssignment_6)
	{ after(grammarAccess.getDefinitionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__7__Impl
	rule__Definition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__8__Impl
	rule__Definition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_8()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__9__Impl
	rule__Definition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_9()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__10__Impl
	rule__Definition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getWriteKeyword_10()); }
	'write'
	{ after(grammarAccess.getDefinitionAccess().getWriteKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__11__Impl
	rule__Definition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLCParserRuleCall_11()); }
	ruleLC
	{ after(grammarAccess.getDefinitionAccess().getLCParserRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getOutputAssignment_12()); }
	(rule__Definition__OutputAssignment_12)
	{ after(grammarAccess.getDefinitionAccess().getOutputAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVariablesAssignment_0()); }
	(rule__Input__VariablesAssignment_0)
	{ after(grammarAccess.getInputAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_1()); }
	(rule__Input__Group_1__0)*
	{ after(grammarAccess.getInputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__0__Impl
	rule__Input__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getInputAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__1__Impl
	rule__Input__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getInputAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__2__Impl
	rule__Input__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getInputAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVariablesAssignment_1_3()); }
	(rule__Input__VariablesAssignment_1_3)
	{ after(grammarAccess.getInputAccess().getVariablesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVariablesAssignment_0()); }
	(rule__Output__VariablesAssignment_0)
	{ after(grammarAccess.getOutputAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_1()); }
	(rule__Output__Group_1__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__0__Impl
	rule__Output__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getOutputAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__1__Impl
	rule__Output__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__2__Impl
	rule__Output__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getOutputAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVariablesAssignment_1_3()); }
	(rule__Output__VariablesAssignment_1_3)
	{ after(grammarAccess.getOutputAccess().getVariablesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
	(rule__Commands__CommandsAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getCommandsAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
	rule__Commands__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__2__Impl
	rule__Commands__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getCommandsAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_1_3()); }
	(rule__Commands__CommandsAssignment_1_3)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getNopCommandAction_0_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getNopCommandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getNopCommandParserRuleCall_0_1()); }
	ruleNopCommand
	{ after(grammarAccess.getCommandAccess().getNopCommandParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__0__Impl
	rule__WhileCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__1__Impl
	rule__WhileCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__2__Impl
	rule__WhileCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getCondAssignment_2()); }
	(rule__WhileCommand__CondAssignment_2)
	{ after(grammarAccess.getWhileCommandAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__3__Impl
	rule__WhileCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__4__Impl
	rule__WhileCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getWhileCommandAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__5__Impl
	rule__WhileCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__6__Impl
	rule__WhileCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getBodyAssignment_6()); }
	(rule__WhileCommand__BodyAssignment_6)
	{ after(grammarAccess.getWhileCommandAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__7__Impl
	rule__WhileCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getOdKeyword_8()); }
	'od'
	{ after(grammarAccess.getWhileCommandAccess().getOdKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__0__Impl
	rule__ForCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForCommandAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__1__Impl
	rule__ForCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getForCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__2__Impl
	rule__ForCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getCondAssignment_2()); }
	(rule__ForCommand__CondAssignment_2)
	{ after(grammarAccess.getForCommandAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__3__Impl
	rule__ForCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getForCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__4__Impl
	rule__ForCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForCommandAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__5__Impl
	rule__ForCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getForCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__6__Impl
	rule__ForCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getBodyAssignment_6()); }
	(rule__ForCommand__BodyAssignment_6)
	{ after(grammarAccess.getForCommandAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__7__Impl
	rule__ForCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getForCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForCommand__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForCommandAccess().getOdKeyword_8()); }
	'od'
	{ after(grammarAccess.getForCommandAccess().getOdKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__0__Impl
	rule__IfCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__1__Impl
	rule__IfCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__2__Impl
	rule__IfCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getCondAssignment_2()); }
	(rule__IfCommand__CondAssignment_2)
	{ after(grammarAccess.getIfCommandAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__3__Impl
	rule__IfCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__4__Impl
	rule__IfCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getIfCommandAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__5__Impl
	rule__IfCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__6__Impl
	rule__IfCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getThenBodyAssignment_6()); }
	(rule__IfCommand__ThenBodyAssignment_6)
	{ after(grammarAccess.getIfCommandAccess().getThenBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__7__Impl
	rule__IfCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__8__Impl
	rule__IfCommand__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getGroup_8()); }
	(rule__IfCommand__Group_8__0)?
	{ after(grammarAccess.getIfCommandAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getFiKeyword_9()); }
	'fi'
	{ after(grammarAccess.getIfCommandAccess().getFiKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_8__0__Impl
	rule__IfCommand__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getIfCommandAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_8__1__Impl
	rule__IfCommand__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_8_1()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_8__2__Impl
	rule__IfCommand__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElseBodyAssignment_8_2()); }
	(rule__IfCommand__ElseBodyAssignment_8_2)
	{ after(grammarAccess.getIfCommandAccess().getElseBodyAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_8_3()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__0__Impl
	rule__ForeachCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForeachCommandAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__1__Impl
	rule__ForeachCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__2__Impl
	rule__ForeachCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getExpElementAssignment_2()); }
	(rule__ForeachCommand__ExpElementAssignment_2)
	{ after(grammarAccess.getForeachCommandAccess().getExpElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__3__Impl
	rule__ForeachCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__4__Impl
	rule__ForeachCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getInKeyword_4()); }
	'in'
	{ after(grammarAccess.getForeachCommandAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__5__Impl
	rule__ForeachCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__6__Impl
	rule__ForeachCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getExpListAssignment_6()); }
	(rule__ForeachCommand__ExpListAssignment_6)
	{ after(grammarAccess.getForeachCommandAccess().getExpListAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__7__Impl
	rule__ForeachCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__8__Impl
	rule__ForeachCommand__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getDoKeyword_8()); }
	'do'
	{ after(grammarAccess.getForeachCommandAccess().getDoKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__9__Impl
	rule__ForeachCommand__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_9()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__10__Impl
	rule__ForeachCommand__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getBodyAssignment_10()); }
	(rule__ForeachCommand__BodyAssignment_10)
	{ after(grammarAccess.getForeachCommandAccess().getBodyAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__11__Impl
	rule__ForeachCommand__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_11()); }
	ruleLC
	{ after(grammarAccess.getForeachCommandAccess().getLCParserRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeachCommand__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachCommandAccess().getOdKeyword_12()); }
	'od'
	{ after(grammarAccess.getForeachCommandAccess().getOdKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarsCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsCommand__Group__0__Impl
	rule__VarsCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsCommandAccess().getVariablesAssignment_0()); }
	(rule__VarsCommand__VariablesAssignment_0)
	{ after(grammarAccess.getVarsCommandAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsCommand__Group__1__Impl
	rule__VarsCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getVarsCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsCommand__Group__2__Impl
	rule__VarsCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsCommandAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getVarsCommandAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsCommand__Group__3__Impl
	rule__VarsCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getVarsCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsCommandAccess().getValuesAssignment_4()); }
	(rule__VarsCommand__ValuesAssignment_4)
	{ after(grammarAccess.getVarsCommandAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getVariablesAssignment_0()); }
	(rule__Vars__VariablesAssignment_0)
	{ after(grammarAccess.getVarsAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getGroup_1()); }
	(rule__Vars__Group_1__0)*
	{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getVarsAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__1__Impl
	rule__Vars__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__2__Impl
	rule__Vars__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getVarsAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getVariablesAssignment_1_3()); }
	(rule__Vars__VariablesAssignment_1_3)
	{ after(grammarAccess.getVarsAccess().getVariablesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimpleWithLExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__0__Impl
	rule__ExprSimpleWithLExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__1__Impl
	rule__ExprSimpleWithLExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__2__Impl
	rule__ExprSimpleWithLExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getOperationAssignment_2()); }
	(rule__ExprSimpleWithLExpr__OperationAssignment_2)
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__3__Impl
	rule__ExprSimpleWithLExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__4__Impl
	rule__ExprSimpleWithLExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getLexprAssignment_4()); }
	(rule__ExprSimpleWithLExpr__LexprAssignment_4)
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getLexprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__5__Impl
	rule__ExprSimpleWithLExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithLExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithLExprAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getExprSimpleWithLExprAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimpleWithExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__0__Impl
	rule__ExprSimpleWithExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprSimpleWithExprAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__1__Impl
	rule__ExprSimpleWithExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__2__Impl
	rule__ExprSimpleWithExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getOperationAssignment_2()); }
	(rule__ExprSimpleWithExpr__OperationAssignment_2)
	{ after(grammarAccess.getExprSimpleWithExprAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__3__Impl
	rule__ExprSimpleWithExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__4__Impl
	rule__ExprSimpleWithExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getExprAssignment_4()); }
	(rule__ExprSimpleWithExpr__ExprAssignment_4)
	{ after(grammarAccess.getExprSimpleWithExprAccess().getExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__5__Impl
	rule__ExprSimpleWithExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithExprAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithExprAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getExprSimpleWithExprAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimpleWithSymbolLExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__0__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__1__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__2__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getSymbolAssignment_2()); }
	(rule__ExprSimpleWithSymbolLExpr__SymbolAssignment_2)
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getSymbolAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__3__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__4__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLexprAssignment_4()); }
	(rule__ExprSimpleWithSymbolLExpr__LexprAssignment_4)
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLexprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__5__Impl
	rule__ExprSimpleWithSymbolLExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimpleWithSymbolLExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group__0__Impl
	rule__LExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getExpressionsAssignment_0()); }
	(rule__LExpr__ExpressionsAssignment_0)
	{ after(grammarAccess.getLExprAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getGroup_1()); }
	(rule__LExpr__Group_1__0)*
	{ after(grammarAccess.getLExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group_1__0__Impl
	rule__LExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getLExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getExpressionsAssignment_1_1()); }
	(rule__LExpr__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getLExprAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getExpressionsAssignment_0()); }
	(rule__Exprs__ExpressionsAssignment_0)
	{ after(grammarAccess.getExprsAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getGroup_1()); }
	(rule__Exprs__Group_1__0)*
	{ after(grammarAccess.getExprsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__0__Impl
	rule__Exprs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getExprsAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__1__Impl
	rule__Exprs__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getExprsAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__2__Impl
	rule__Exprs__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getExprsAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getExpressionsAssignment_1_3()); }
	(rule__Exprs__ExpressionsAssignment_1_3)
	{ after(grammarAccess.getExprsAccess().getExpressionsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getExpressionAssignment_0_0()); }
	(rule__Expr__ExpressionAssignment_0_0)
	{ after(grammarAccess.getExprAccess().getExpressionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getExpressionsOrAssignment_0()); }
	(rule__ExprAnd__ExpressionsOrAssignment_0)
	{ after(grammarAccess.getExprAndAccess().getExpressionsOrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getGroup_1()); }
	(rule__ExprAnd__Group_1__0)*
	{ after(grammarAccess.getExprAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__0__Impl
	rule__ExprAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getExprAndAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__1__Impl
	rule__ExprAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getExprAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__2__Impl
	rule__ExprAnd__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getExprAndAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getExpressionsOrAssignment_1_3()); }
	(rule__ExprAnd__ExpressionsOrAssignment_1_3)
	{ after(grammarAccess.getExprAndAccess().getExpressionsOrAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getExpressionsNotAssignment_0()); }
	(rule__ExprOr__ExpressionsNotAssignment_0)
	{ after(grammarAccess.getExprOrAccess().getExpressionsNotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getGroup_1()); }
	(rule__ExprOr__Group_1__0)*
	{ after(grammarAccess.getExprOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__0__Impl
	rule__ExprOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getExprOrAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__1__Impl
	rule__ExprOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getExprOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__2__Impl
	rule__ExprOr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getExprOrAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getExpressionsNotAssignment_1_3()); }
	(rule__ExprOr__ExpressionsNotAssignment_1_3)
	{ after(grammarAccess.getExprOrAccess().getExpressionsNotAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group__0__Impl
	rule__ExprNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getGroup_0()); }
	(rule__ExprNot__Group_0__0)?
	{ after(grammarAccess.getExprNotAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getExpressionEqAssignment_1()); }
	(rule__ExprNot__ExpressionEqAssignment_1)
	{ after(grammarAccess.getExprNotAccess().getExpressionEqAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group_0__0__Impl
	rule__ExprNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getNegationAssignment_0_0()); }
	(rule__ExprNot__NegationAssignment_0_0)
	{ after(grammarAccess.getExprNotAccess().getNegationAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getLCParserRuleCall_0_1()); }
	ruleLC
	{ after(grammarAccess.getExprNotAccess().getLCParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_0__0__Impl
	rule__ExprEq__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getExprLSimpleAssignment_0_0()); }
	(rule__ExprEq__ExprLSimpleAssignment_0_0)
	{ after(grammarAccess.getExprEqAccess().getExprLSimpleAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_0__1__Impl
	rule__ExprEq__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getLCParserRuleCall_0_1()); }
	ruleLC
	{ after(grammarAccess.getExprEqAccess().getLCParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_0__2__Impl
	rule__ExprEq__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_0_2()); }
	'=?'
	{ after(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_0__3__Impl
	rule__ExprEq__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getLCParserRuleCall_0_3()); }
	ruleLC
	{ after(grammarAccess.getExprEqAccess().getLCParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getExprRSimpleAssignment_0_4()); }
	(rule__ExprEq__ExprRSimpleAssignment_0_4)
	{ after(grammarAccess.getExprEqAccess().getExprRSimpleAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__0__Impl
	rule__ExprEq__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getExprEqAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__1__Impl
	rule__ExprEq__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getExprAssignment_1_1()); }
	(rule__ExprEq__ExprAssignment_1_1)
	{ after(grammarAccess.getExprEqAccess().getExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getExprEqAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProgramFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getModelAccess().getProgramFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunctionNameValidIDParserRuleCall_2_0()); }
		ruleValidID
		{ after(grammarAccess.getFunctionAccess().getFunctionNameValidIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionDefinitionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunctionDefinitionDefinitionParserRuleCall_6_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getFunctionDefinitionDefinitionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__IntputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getIntputInputParserRuleCall_2_0()); }
		ruleInput
		{ after(grammarAccess.getDefinitionAccess().getIntputInputParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getBodyCommandsParserRuleCall_6_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getBodyCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__OutputAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_12_0()); }
		ruleOutput
		{ after(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VariablesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VariablesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_3_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getCondExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getWhileCommandAccess().getCondExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getBodyCommandsParserRuleCall_6_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileCommandAccess().getBodyCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForCommandAccess().getCondExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getForCommandAccess().getCondExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForCommand__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForCommandAccess().getBodyCommandsParserRuleCall_6_0()); }
		ruleCommands
		{ after(grammarAccess.getForCommandAccess().getBodyCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getCondExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getIfCommandAccess().getCondExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ThenBodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getThenBodyCommandsParserRuleCall_6_0()); }
		ruleCommands
		{ after(grammarAccess.getIfCommandAccess().getThenBodyCommandsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ElseBodyAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getElseBodyCommandsParserRuleCall_8_2_0()); }
		ruleCommands
		{ after(grammarAccess.getIfCommandAccess().getElseBodyCommandsParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__ExpElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getExpElementVARIABLETerminalRuleCall_2_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getForeachCommandAccess().getExpElementVARIABLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__ExpListAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getExpListExprParserRuleCall_6_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachCommandAccess().getExpListExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachCommand__BodyAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachCommandAccess().getBodyCommandsParserRuleCall_10_0()); }
		ruleCommands
		{ after(grammarAccess.getForeachCommandAccess().getBodyCommandsParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsCommandAccess().getVariablesVarsParserRuleCall_0_0()); }
		ruleVars
		{ after(grammarAccess.getVarsCommandAccess().getVariablesVarsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsCommand__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsCommandAccess().getValuesExprsParserRuleCall_4_0()); }
		ruleExprs
		{ after(grammarAccess.getVarsCommandAccess().getValuesExprsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getVariablesVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VariablesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getVariablesVARIABLETerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__TermAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprSimpleAccess().getTermVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__TermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermSYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprSimpleAccess().getTermSYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getTermNilKeyword_2_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getTermNilKeyword_2_0()); }
			'nil'
			{ after(grammarAccess.getExprSimpleAccess().getTermNilKeyword_2_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getTermNilKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithLExprParserRuleCall_3_0()); }
		ruleExprSimpleWithLExpr
		{ after(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithLExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithExprParserRuleCall_4_0()); }
		ruleExprSimpleWithExpr
		{ after(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExpressionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithSymbolLExprParserRuleCall_5_0()); }
		ruleExprSimpleWithSymbolLExpr
		{ after(grammarAccess.getExprSimpleAccess().getExpressionExprSimpleWithSymbolLExprParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithLExprAccess().getOperationAlternatives_2_0()); }
		(rule__ExprSimpleWithLExpr__OperationAlternatives_2_0)
		{ after(grammarAccess.getExprSimpleWithLExprAccess().getOperationAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithLExpr__LexprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithLExprAccess().getLexprLExprParserRuleCall_4_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprSimpleWithLExprAccess().getLexprLExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithExprAccess().getOperationAlternatives_2_0()); }
		(rule__ExprSimpleWithExpr__OperationAlternatives_2_0)
		{ after(grammarAccess.getExprSimpleWithExprAccess().getOperationAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithExpr__ExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithExprAccess().getExprExprParserRuleCall_4_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleWithExprAccess().getExprExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__SymbolAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getSymbolSYMBOLTerminalRuleCall_2_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getSymbolSYMBOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimpleWithSymbolLExpr__LexprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLexprLExprParserRuleCall_4_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprSimpleWithSymbolLExprAccess().getLexprLExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLExprAccess().getExpressionsExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getLExprAccess().getExpressionsExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLExprAccess().getExpressionsExprParserRuleCall_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getLExprAccess().getExpressionsExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getExpressionsExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getExpressionsExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExpressionsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getExpressionsExprParserRuleCall_1_3_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getExpressionsExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExpressionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExpressionExprAndParserRuleCall_0_0_0()); }
		ruleExprAnd
		{ after(grammarAccess.getExprAccess().getExpressionExprAndParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExpressionExprSimpleParserRuleCall_1_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprAccess().getExpressionExprSimpleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__ExpressionsOrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAndAccess().getExpressionsOrExprOrParserRuleCall_0_0()); }
		ruleExprOr
		{ after(grammarAccess.getExprAndAccess().getExpressionsOrExprOrParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__ExpressionsOrAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAndAccess().getExpressionsOrExprOrParserRuleCall_1_3_0()); }
		ruleExprOr
		{ after(grammarAccess.getExprAndAccess().getExpressionsOrExprOrParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__ExpressionsNotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprOrAccess().getExpressionsNotExprNotParserRuleCall_0_0()); }
		ruleExprNot
		{ after(grammarAccess.getExprOrAccess().getExpressionsNotExprNotParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__ExpressionsNotAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprOrAccess().getExpressionsNotExprNotParserRuleCall_1_3_0()); }
		ruleExprNot
		{ after(grammarAccess.getExprOrAccess().getExpressionsNotExprNotParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__NegationAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprNotAccess().getNegationNotKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getExprNotAccess().getNegationNotKeyword_0_0_0()); }
			'not'
			{ after(grammarAccess.getExprNotAccess().getNegationNotKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getExprNotAccess().getNegationNotKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__ExpressionEqAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprNotAccess().getExpressionEqExprEqParserRuleCall_1_0()); }
		ruleExprEq
		{ after(grammarAccess.getExprNotAccess().getExpressionEqExprEqParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprLSimpleAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getExprLSimpleExprSimpleParserRuleCall_0_0_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprEqAccess().getExprLSimpleExprSimpleParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprRSimpleAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getExprRSimpleExprSimpleParserRuleCall_0_4_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprEqAccess().getExprRSimpleExprSimpleParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getExprExprParserRuleCall_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprEqAccess().getExprExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VARIABLE : 'A'..'Z' ('0'..'9'|'a'..'z'|'A'..'Z')* (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('0'..'9'|'a'..'z'|'A'..'Z')?)* ('?'|'!')?;

RULE_SYMBOL : 'a'..'z' ('0'..'9'|'a'..'z'|'A'..'Z')* (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('0'..'9'|'a'..'z'|'A'..'Z')?)* ('?'|'!')?;

RULE_SP : ' ';

RULE_CR : '\n';

RULE_TAB : '\t';

RULE_LF : '\r';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
